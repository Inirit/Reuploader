{"version":3,"file":"background.bundle.js","sources":["../../../ts/handlers/HandlerType.ts","../../../ts/options/ExtensionOptionsBase.ts","../../../ts/options/ImgurOptions.ts","../../../ts/handlers/HandlerBase.ts","../../../ts/handlers/ImgurHandler.ts","../../../ts/handlers/PomfHandler.ts","../../../ts/handlers/PostImage.ts","../../../ts/options/PrimaryOptions.ts","../../../ts/BackgroundMain.ts"],"sourcesContent":["enum HandlerType\r\n{\r\n\tPomf,\r\n\tImgur,\r\n\tPostImage\r\n}\r\n\r\nexport default HandlerType;\r\n","abstract class ExtensionOptionsBase\r\n{\r\n\tprotected static async GetOptions(defaultOptions: browser.storage.StorageObject): Promise<browser.storage.StorageObject>\r\n\t{\r\n\t\tconst options = await browser.storage.local.get(defaultOptions);\r\n\r\n\t\treturn options;\r\n\t}\r\n\r\n\tprotected static async GetOption<T extends browser.storage.StorageValue>(name: string, defaultOptions: browser.storage.StorageObject)\r\n\t{\r\n\t\tconst options = await this.GetOptions(defaultOptions);\r\n\t\tconst value = options[name];\r\n\r\n\t\tconsole.debug(`Got '${name}' with value '${value}'`);\r\n\r\n\t\treturn value as T;\r\n\t}\r\n\r\n\tprotected static async SetOption(name: string, value: browser.storage.StorageValue)\r\n\t{\r\n\t\tconsole.debug(`Setting '${name}' to '${value}'`);\r\n\r\n\t\tif (value)\r\n\t\t{\r\n\t\t\tconst options = await browser.storage.local.get(name);\r\n\t\t\toptions[name] = value;\r\n\r\n\t\t\tawait browser.storage.local.set(options);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tawait browser.storage.local.remove(name);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default ExtensionOptionsBase;\r\n","import ExtensionOptionsBase from \"./ExtensionOptionsBase\";\r\n\r\nclass ImgurOptions extends ExtensionOptionsBase\r\n{\r\n\tpublic static readonly ClientId: string = \"4a4f81163ed1219\";\r\n\r\n\tprivate static readonly _defaultOptions: browser.storage.StorageObject = {\r\n\t\t\"AccessToken\": undefined,\r\n\t\t\"ExpiresIn\": undefined,\r\n\t\t\"TokenType\": undefined,\r\n\t\t\"RefreshToken\": undefined,\r\n\t\t\"AccountName\": undefined,\r\n\t\t\"AccountId\": undefined\r\n\t};\r\n\r\n\tprivate static readonly _accessTokenName = \"AccessToken\";\r\n\tprivate static readonly _expiresInName = \"ExpiresIn\";\r\n\tprivate static readonly _tokenTypeName = \"TokenType\";\r\n\tprivate static readonly _refreshTokenName = \"RefreshToken\";\r\n\tprivate static readonly _accountNameName = \"AccountName\";\r\n\tprivate static readonly _accountIdName = \"AccountId\";\r\n\r\n\tpublic static async GetAccessToken(): Promise<string>\r\n\t{\r\n\t\tconst value = await this.GetOption<string>(this._accessTokenName, this._defaultOptions);\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic static async GetExpiresIn(): Promise<string>\r\n\t{\r\n\t\tconst value = await this.GetOption<string>(this._expiresInName, this._defaultOptions);\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic static async GetTokenType(): Promise<string>\r\n\t{\r\n\t\tconst value = await this.GetOption<string>(this._tokenTypeName, this._defaultOptions);\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic static async GetRefreshToken(): Promise<string>\r\n\t{\r\n\t\tconst value = await this.GetOption<string>(this._refreshTokenName, this._defaultOptions);\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic static async GetAccountName(): Promise<string>\r\n\t{\r\n\t\tconst value = await this.GetOption<string>(this._accountNameName, this._defaultOptions);\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic static async GetAccountId(): Promise<string>\r\n\t{\r\n\t\tconst value = await this.GetOption<string>(this._accountIdName, this._defaultOptions);\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic static async SetAuthInfo(authResponse: string)\r\n\t{\r\n\t\tconst params = this.GetParamsFromResponseUrl(authResponse);\r\n\r\n\t\tawait this.SetAccessToken(params[\"access_token\"]);\r\n\t\tawait this.SetExpiresIn(params[\"expires_in\"]);\r\n\t\tawait this.SetTokenType(params[\"token_type\"]);\r\n\t\tawait this.SetRefreshToken(params[\"refresh_token\"]);\r\n\t\tawait this.SetAccountName(params[\"account_username\"]);\r\n\t\tawait this.SetAccountId(params[\"account_id\"]);\r\n\t}\r\n\r\n\tprivate static async SetAccessToken(value: string)\r\n\t{\r\n\t\tawait this.SetOption(this._accessTokenName, value);\r\n\t}\r\n\r\n\tprivate static async SetExpiresIn(value: string)\r\n\t{\r\n\t\tawait this.SetOption(this._expiresInName, value);\r\n\t}\r\n\r\n\tprivate static async SetTokenType(value: string)\r\n\t{\r\n\t\tawait this.SetOption(this._tokenTypeName, value);\r\n\t}\r\n\r\n\tprivate static async SetRefreshToken(value: string)\r\n\t{\r\n\t\tawait this.SetOption(this._refreshTokenName, value);\r\n\t}\r\n\r\n\tprivate static async SetAccountName(value: string)\r\n\t{\r\n\t\tawait this.SetOption(this._accountNameName, value);\r\n\t}\r\n\r\n\tprivate static async SetAccountId(value: string)\r\n\t{\r\n\t\tawait this.SetOption(this._accountIdName, value);\r\n\t}\r\n\r\n\tprivate static GetParamsFromResponseUrl(response: string): Array<string>\r\n\t{\r\n\t\tconst values: Array<string> = [];\r\n\r\n\t\tif (!response)\r\n\t\t{\r\n\t\t\treturn values;\r\n\t\t}\r\n\r\n\t\tconst params = response.slice(response.indexOf('#') + 1).split('&');\r\n\r\n\t\tfor (let i = 0; i < params.length; i++)\r\n\t\t{\r\n\t\t\tconst param = params[i].split('=');\r\n\t\t\tvalues.push(param[0]);\r\n\t\t\tvalues[param[0]] = param[1];\r\n\t\t}\r\n\t\treturn values;\r\n\t}\r\n}\r\n\r\nexport default ImgurOptions;\r\n","import HandlerType from \"./HandlerType\";\r\nimport IHandler from \"./IHandler\";\r\n\r\nabstract class HandlerBase implements IHandler\r\n{\r\n\tabstract HandlerType: HandlerType;\r\n\r\n\tabstract HandleUpload(image: Blob): Promise<string>;\r\n\r\n\tpublic async ReuploadImage(originalImageUrl: string): Promise<string>\r\n\t{\r\n\t\tconst image: Blob = await this.FetchImage(originalImageUrl);\r\n\t\tconst uploadedUrl = await this.UploadImage(image);\r\n\r\n\t\treturn uploadedUrl;\r\n\t}\r\n\r\n\tprotected async UploadImage(image: Blob): Promise<string>\r\n\t{\r\n\t\tconst notificationId = await browser.notifications.create(\r\n\t\t\t`reupload_progress_${Date.now()}`, {\r\n\t\t\t\ttype: \"basic\",\r\n\t\t\t\ttitle: browser.i18n.getMessage(\"extensionName\"),\r\n\t\t\t\ticonUrl: \"./images/up_arrow.png\",\r\n\t\t\t\tmessage: browser.i18n.getMessage(\"notificationMessageReuploadProgress\", HandlerType[this.HandlerType])\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tsetTimeout(() =>\r\n\t\t{\r\n\t\t\tbrowser.notifications.clear(notificationId);\r\n\t\t}, 5000);\r\n\r\n\t\tconst uploadedUrl = await this.HandleUpload(image);\r\n\r\n\t\tawait browser.notifications.clear(notificationId);\r\n\r\n\t\treturn uploadedUrl;\r\n\t}\r\n\r\n\tprotected async FetchImage(imageUrl: string): Promise<Blob>\r\n\t{\r\n\t\tlet blob: Blob;\r\n\r\n\t\tawait $.ajax(\r\n\t\t\t{\r\n\t\t\t\turl: imageUrl,\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\txhr: this.GetFetchXhr\r\n\t\t\t}).then((data: Blob) =>\r\n\t\t\t{\r\n\t\t\t\tconsole.debug(`Image fetch complete. Size: ${data.size}, Type: ${data.type}`);\r\n\r\n\t\t\t\tblob = data;\r\n\t\t\t},\r\n\t\t\t(jqXHR, textStatus, error) =>\r\n\t\t\t{\r\n\t\t\t\tthis.HandleFetchError(jqXHR, textStatus, error);\r\n\t\t\t});\r\n\r\n\t\treturn blob;\r\n\t}\r\n\r\n\tprotected GetUploadXhr(): XMLHttpRequest\r\n\t{\r\n\t\tconst xhr = $.ajaxSettings.xhr();\r\n\r\n\t\tif (xhr.upload)\r\n\t\t{\r\n\t\t\txhr.upload.addEventListener(\"progress\", (e) =>\r\n\t\t\t{\r\n\t\t\t\tif (e.lengthComputable)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst percentage = e.loaded / e.total * 100;\r\n\r\n\t\t\t\t\tconsole.debug(`Progress: ${percentage}%`);\r\n\t\t\t\t}\r\n\t\t\t}, false);\r\n\t\t}\r\n\r\n\t\treturn xhr;\r\n\t}\r\n\r\n\tprotected GetFetchXhr(): XMLHttpRequest\r\n\t{\r\n\t\tconst xhr = $.ajaxSettings.xhr();\r\n\r\n\t\txhr.responseType = \"blob\";\r\n\r\n\t\treturn xhr;\r\n\t}\r\n\r\n\tprotected async HandleGeneralError(errorMessage: string)\r\n\t{\r\n\t\tconst notificationId = await browser.notifications.create(\r\n\t\t\t`reupload_failed_${Date.now()}`, {\r\n\t\t\t\ttype: \"basic\",\r\n\t\t\t\ttitle: browser.i18n.getMessage(\"extensionName\"),\r\n\t\t\t\ticonUrl: \"./images/up_arrow.png\",\r\n\t\t\t\tmessage: `${errorMessage}`\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tsetTimeout(() =>\r\n\t\t{\r\n\t\t\tbrowser.notifications.clear(notificationId);\r\n\t\t}, 10000);\r\n\t}\r\n\r\n\tprotected async HandleUploadError(jqXHR: JQuery.jqXHR, textStatus: JQuery.Ajax.ErrorTextStatus, error: string)\r\n\t{\r\n\t\tawait this.HandleGeneralError(browser.i18n.getMessage(\"errorImageFailedToUpload\", [textStatus, error]));\r\n\t}\r\n\r\n\tprotected async HandleFetchError(jqXHR: JQuery.jqXHR, textStatus: JQuery.Ajax.ErrorTextStatus, error: string)\r\n\t{\r\n\t\tawait this.HandleGeneralError(browser.i18n.getMessage(\"errorImageFailedToDownload\", [textStatus, error]));\r\n\t}\r\n}\r\n\r\nexport default HandlerBase;\r\n","import ImgurOptions from \"../options/ImgurOptions\";\r\nimport HandlerBase from \"./HandlerBase\";\r\nimport HandlerType from \"./HandlerType\";\r\n\r\nclass ImgurHandler extends HandlerBase\r\n{\r\n\tprivate readonly _uploadUrl: string = \"https://api.imgur.com/3/image\";\r\n\r\n\tget HandlerType(): HandlerType\r\n\t{\r\n\t\treturn HandlerType.Imgur;\r\n\t}\r\n\r\n\tpublic async HandleUpload(image: Blob): Promise<string>\r\n\t{\r\n\t\tconst authorizationHeader = await this.GetAuthorizationHeader();\r\n\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"image\", image, \"image.jpg\");\r\n\r\n\t\tlet uploadedUrl: string;\r\n\r\n\t\tawait $.ajax(\r\n\t\t\t{\r\n\t\t\t\turl: this._uploadUrl,\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tdata: formData,\r\n\t\t\t\tcache: false,\r\n\t\t\t\tcontentType: false,\r\n\t\t\t\tprocessData: false,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: authorizationHeader,\r\n\t\t\t\t\tAccept: \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\txhr: this.GetUploadXhr\r\n\t\t\t}).then(result =>\r\n\t\t\t{\r\n\t\t\t\tif (result && result.data && result.data.link)\r\n\t\t\t\t{\r\n\t\t\t\t\tuploadedUrl = result.data.link;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.HandleGeneralError(\"Failed to upload image, unexpected response format from service.\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(jqXHR, textStatus, error) =>\r\n\t\t\t{\r\n\t\t\t\tthis.HandleUploadError(jqXHR, textStatus, error);\r\n\t\t\t});\r\n\r\n\t\treturn uploadedUrl;\r\n\t}\r\n\r\n\tprivate async GetAuthorizationHeader(): Promise<string>\r\n\t{\r\n\t\tlet authorizationHeader: string;\r\n\t\tconst accessToken = await ImgurOptions.GetAccessToken();\r\n\r\n\t\tif (accessToken)\r\n\t\t{\r\n\t\t\tauthorizationHeader = `Bearer ${accessToken}`;\r\n\r\n\t\t\tconsole.debug(`Using access token for Imgur upload`);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst clientId = await ImgurOptions.ClientId;\r\n\t\t\tauthorizationHeader = `Client-ID ${clientId}`;\r\n\r\n\t\t\tconsole.debug(`Using client id for Imgur upload`);\r\n\t\t}\r\n\r\n\t\treturn authorizationHeader;\r\n\t}\r\n}\r\n\r\nexport default ImgurHandler;\r\n","import HandlerBase from \"./HandlerBase\";\r\nimport HandlerType from \"./HandlerType\";\r\n\r\nclass PomfHandler extends HandlerBase\r\n{\r\n\tprivate readonly _uploadUrl: string = \"https://pomf.cat/upload.php\";\r\n\tprivate readonly _uploadPrefix: string = \"https://a.pomf.cat/\";\r\n\r\n\tget HandlerType(): HandlerType\r\n\t{\r\n\t\treturn HandlerType.Pomf;\r\n\t}\r\n\r\n\tpublic async HandleUpload(image: Blob): Promise<string>\r\n\t{\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"files[]\", image, \"image.jpg\");\r\n\r\n\t\tlet uploadedUrl: string;\r\n\r\n\t\tawait $.ajax(\r\n\t\t\t{\r\n\t\t\t\turl: this._uploadUrl,\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tdata: formData,\r\n\t\t\t\tcache: false,\r\n\t\t\t\tcontentType: false,\r\n\t\t\t\tprocessData: false,\r\n\t\t\t\txhr: this.GetUploadXhr\r\n\t\t\t}).then((data) =>\r\n\t\t\t{\r\n\t\t\t\tif (data && data.files)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst uploadedFile = data.files[0];\r\n\t\t\t\t\tconst uploadedFileName = uploadedFile.url;\r\n\r\n\t\t\t\t\tuploadedUrl = `${this._uploadPrefix}${uploadedFileName}`;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.HandleGeneralError(\"Failed to upload image, unexpected response format from service.\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(jqXHR, textStatus, error) =>\r\n\t\t\t{\r\n\t\t\t\tthis.HandleUploadError(jqXHR, textStatus, error);\r\n\t\t\t});\r\n\r\n\t\treturn uploadedUrl;\r\n\t}\r\n}\r\n\r\nexport default PomfHandler;\r\n","import * as blobUtil from \"blob-util\";\r\n\r\nimport HandlerBase from \"./HandlerBase\";\r\nimport HandlerType from \"./HandlerType\";\r\n\r\n/*\r\nThe functionality for this service is based on the network traffic from their Windows screen cap tool:\r\nhttp://postimages.org/app.\r\n*/\r\n\r\nclass PostImageData\r\n{\r\n\t// Probably just an API key assigned to their screen cap tool\r\n\tpublic key: string = \"8ca0b57a6bb9c4c33cd9e7ab8e6a7f05\";\r\n\r\n\t// I don't know what this is\r\n\tpublic o: string = \"2b819584285c102318568238c7d4a4c7\";\r\n\r\n\t// I don't know what this is\r\n\tpublic m: string = \"fb733cccce28e7db3ff9f17d7ccff3d1\";\r\n\r\n\t// API usage can be denied based on version number, may need to update this in the future\r\n\tpublic version: string = \"1.0.1\";\r\n\r\n\t// Name of the image after being uploaded\r\n\tpublic name: string = \"image\";\r\n\r\n\t// This doesn't seem to matter (e.g. a png will be uploaded as a png), but the value is required.\r\n\tpublic type: string = \"jpg\";\r\n\r\n\t// The image data as a base64 string\r\n\tpublic image: string;\r\n\r\n\tconstructor(imageBase64: string)\r\n\t{\r\n\t\tthis.image = imageBase64;\r\n\t}\r\n}\r\n\r\nclass PostImageHandler extends HandlerBase\r\n{\r\n\t// Determined by observing network traffic from their screencap tool\r\n\tprivate readonly _uploadUrl: string = \"http://api.postimage.org/1/upload\";\r\n\r\n\tget HandlerType(): HandlerType\r\n\t{\r\n\t\treturn HandlerType.PostImage;\r\n\t}\r\n\r\n\tpublic async HandleUpload(image: Blob): Promise<string>\r\n\t{\r\n\t\tconst dataUrl = await blobUtil.blobToBase64String(image);\r\n\t\tconst uploadData = new PostImageData(dataUrl);\r\n\t\tlet uploadedUrl: string;\r\n\r\n\t\tawait $.ajax(\r\n\t\t\t{\r\n\t\t\t\turl: this._uploadUrl,\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tdata: uploadData,\r\n\t\t\t\txhr: this.GetUploadXhr\r\n\t\t\t}).then((data) =>\r\n\t\t\t{\r\n\t\t\t\tconst xml = $(data);\r\n\t\t\t\tconst link = xml.find(\"hotlink\");\r\n\r\n\t\t\t\tif (link && link.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tuploadedUrl = link.text();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.error(\"Upload to PostImage faile but with a successful status code, potentially requires updating handling.\");\r\n\t\t\t\t\tconsole.error(data);\r\n\r\n\t\t\t\t\tthis.HandleGeneralError(\"Failed to upload image due to an unknown error.\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(jqXHR, textStatus, error) =>\r\n\t\t\t{\r\n\t\t\t\tthis.HandleUploadError(jqXHR, textStatus, error);\r\n\t\t\t});\r\n\r\n\t\treturn uploadedUrl;\r\n\t}\r\n}\r\n\r\nexport default PostImageHandler;\r\n","import HandlerType from \"../handlers/HandlerType\";\r\nimport ExtensionOptionsBase from \"./ExtensionOptionsBase\";\r\n\r\nclass PrimaryOptions extends ExtensionOptionsBase\r\n{\r\n\tpublic static EnabledHandlers: HandlerType[] = [\r\n\t\tHandlerType.Imgur,\r\n\t\tHandlerType.Pomf,\r\n\t\tHandlerType.PostImage\r\n\t];\r\n\r\n\tprivate static readonly _handlerTypeName = \"HandlerType\";\r\n\r\n\tprivate static readonly _defaultOptions: browser.storage.StorageObject = {\r\n\t\t\"HandlerType\": `${HandlerType.Imgur}`\r\n\t};\r\n\r\n\tpublic static async GetHandlerType(): Promise<HandlerType>\r\n\t{\r\n\t\tconst handler = await this.GetOption<HandlerType>(this._handlerTypeName, this._defaultOptions);\r\n\r\n\t\treturn handler;\r\n\t}\r\n\r\n\tpublic static async SetHandlerType(value: HandlerType)\r\n\t{\r\n\t\tawait this.SetOption(this._handlerTypeName, value);\r\n\t}\r\n}\r\n\r\nexport default PrimaryOptions;\r\n","import HandlerType from \"./handlers/HandlerType\";\r\nimport IHandler from \"./handlers/IHandler\";\r\nimport ImgurHandler from \"./handlers/ImgurHandler\";\r\nimport PomfHandler from \"./handlers/PomfHandler\";\r\nimport PostImageHandler from \"./handlers/PostImage\";\r\nimport PrimaryOptions from \"./options/PrimaryOptions\";\r\n\r\nfunction HandleOnCreated()\r\n{\r\n\tif (browser.runtime.lastError)\r\n\t{\r\n\t\tconsole.error(`Error: ${browser.runtime.lastError}`);\r\n\t}\r\n}\r\n\r\nasync function HandleGeneralError(errorMessage: string)\r\n{\r\n\tconst notificationId = await browser.notifications.create(\r\n\t\t`reupload_failed_${Date.now()}`, {\r\n\t\t\ttype: \"basic\",\r\n\t\t\ttitle: browser.i18n.getMessage(\"extensionName\"),\r\n\t\t\ticonUrl: \"./images/up_arrow.png\",\r\n\t\t\tmessage: `${errorMessage}`\r\n\t\t}\r\n\t);\r\n\r\n\tsetTimeout(() =>\r\n\t{\r\n\t\tbrowser.notifications.clear(notificationId);\r\n\t}, 10000);\r\n}\r\n\r\nasync function HandleReuploadOnClick(info: browser.contextMenus.OnClickData, tab: browser.tabs.Tab)\r\n{\r\n\tif (info.menuItemId === \"reuploadMenuItem\")\r\n\t{\r\n\t\tconst currentHandler = await PrimaryOptions.GetHandlerType();\r\n\t\tlet handler: IHandler;\r\n\r\n\t\tswitch (+currentHandler)\r\n\t\t{\r\n\t\t\tcase HandlerType.Imgur:\r\n\t\t\t\thandler = new ImgurHandler();\r\n\t\t\t\tbreak;\r\n\t\t\tcase HandlerType.Pomf:\r\n\t\t\t\thandler = new PomfHandler();\r\n\t\t\t\tbreak;\r\n\t\t\tcase HandlerType.PostImage:\r\n\t\t\t\thandler = new PostImageHandler();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tHandleGeneralError(browser.i18n.getMessage(\"errorHandlerTypeNotSupported\", HandlerType[currentHandler]));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (handler)\r\n\t\t{\r\n\t\t\tif (info.srcUrl)\r\n\t\t\t{\r\n\t\t\t\tconst uploadedUrl = await handler.ReuploadImage(info.srcUrl);\r\n\r\n\t\t\t\tif (uploadedUrl)\r\n\t\t\t\t{\r\n\t\t\t\t\tawait browser.tabs.sendMessage(tab.id, { url: uploadedUrl });\r\n\r\n\t\t\t\t\tconst notificationId = await browser.notifications.create(\r\n\t\t\t\t\t\t`copy_complete_${Date.now()}`, {\r\n\t\t\t\t\t\t\ttype: \"basic\",\r\n\t\t\t\t\t\t\ttitle: browser.i18n.getMessage(\"extensionName\"),\r\n\t\t\t\t\t\t\ticonUrl: \"./images/up_arrow.png\",\r\n\t\t\t\t\t\t\tmessage: browser.i18n.getMessage(\"notificationMessageCopyToClipboard\", uploadedUrl)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tsetTimeout(() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbrowser.notifications.clear(notificationId);\r\n\t\t\t\t\t}, 5000);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tHandleGeneralError(browser.i18n.getMessage(\"errorImageSourceUrl\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function Initialize()\r\n{\r\n\tconsole.debug(`Initializing...`);\r\n\r\n\tbrowser.contextMenus.create(\r\n\t\t{\r\n\t\t\tid: \"reuploadMenuItem\",\r\n\t\t\ttitle: browser.i18n.getMessage(\"reuploadMenuItemLabel\"),\r\n\t\t\tcontexts: [\"image\"]\r\n\t\t}, (HandleOnCreated));\r\n\r\n\tbrowser.contextMenus.onClicked.addListener(HandleReuploadOnClick);\r\n\r\n\tconsole.debug(`Initialization complete.`);\r\n}\r\n\r\nInitialize();\r\n"],"names":["HandlerType","blobUtil.blobToBase64String"],"mappings":"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"}